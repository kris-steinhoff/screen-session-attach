#!/bin/bash

## For tab completion for existing screen sessions, add this code to your .bash_rc
# _attach_complete ()
# {
#     screens=`screen -ls | while read s dump; do echo $s | grep '[0-9]\..*' &> /dev/null; rc=$?; if [ ${rc} -eq 0 ]; then echo $s | awk -F. '{ print $2 }'; fi; done`
#     local curw
#     COMPREPLY=()
#     curw=${COMP_WORDS[COMP_CWORD]}
#     COMPREPLY=($(compgen -W "${screens}" -- $curw))
#     return 0
# }
# 
# complete -F _attach_complete attach
# 

usage="usage: `basename $0` [ -c screen_config_file ] screen_session_name"


screen_config=""
args=`getopt c: $*`
if [ $? != 0 ]
then
    echo $usage
    exit 2
fi
set -- $args

for i
do
    case "$i"
        in
        -c)
            screen_config="$2"; shift;
            shift;;
        --)
            shift; break;;
    esac
done

name=${1}

if [ "x$name" = "x" ]; then
    screen -ls
else
    if [ ! ${HOST} ]; then
        HOST=`hostname`
    fi

    SCREENSESSION=$name screen -ls ${name} | head -1 | grep '^No Sockets found' > /dev/null; rc=$?
    if [ $rc -ne 0 ]; then
        # attach to the existing screen session, $SCREENSESSION is used in .screenrc
        SCREENSESSION=$name screen -dr $name
    else
        read -p "Socket $name not found. Start? [Y/n] " res
        test "x$res" = "x" && res="Y"

        if [ "$res" = "Y" -o "$res" = "y" ]; then
            # start the new screen session, $SCREENSESSION is used in .screenrc
            if [ "x$screen_config" = "x" ]; then
                SCREENSESSION=$name screen -S $name
            else
                SCREENSESSION=$name screen -c $screen_config -S $name
            fi
        fi
    fi
fi
